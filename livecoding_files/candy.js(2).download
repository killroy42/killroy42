/** File: candy.js
 * Plugin for modifying roles. Currently implemented: op & deop
 *
 * Authors:
 *   - Michael Weibel <michael.weibel@gmail.com>
 *
 * License: MIT
 *
 * Copyright:
 *   (c) 2014 Michael Weibel. All rights reserved.
 */

/* global Candy, jQuery, Strophe, $iq */

var CandyShop = (function(self) { return self; }(CandyShop || {}));

/** Class: CandyShop.ModifyRole
 * Remove the ignore option in the roster
 */
CandyShop.ModifyRole = (function(self, Candy, $) {

    var modifyRelationship = function (mtype, mvalue, roomJid, user) {
            var conn = Candy.Core.getConnection(),
                nick = user.getNick(),
                iq = $iq({
                    'to': Candy.Util.escapeJid(roomJid),
                    'type': 'set'
                });

            var itemData = {"nick": nick};
            itemData[mtype] = mvalue;
            iq.c('query', {'xmlns': Strophe.NS.MUC_ADMIN}).c('item', itemData);

            conn.sendIQ(iq.tree());
        },
        modifyRole = function (role, roomJID, user) {
            return modifyRelationship("role", role, roomJID, user);
        },
        modifyAffiliation = function (affiliation, roomJID, user) {
            return modifyRelationship("affiliation", affiliation, roomJID, user);
        };

    var applyTranslations = function applyTranslations() {
        var addModeratorActionLabel = {
          'en' : 'Grant moderator status',
          'de' : 'Moderator status geben'
        };
        var removeModeratorActionLabel = {
          'en' : 'Remove moderator status',
          'de' : 'Moderator status nehmen'
        };

        $.each(addModeratorActionLabel, function(k, v) {
            if(Candy.View.Translation[k]) {
                Candy.View.Translation[k].addModeratorActionLabel = v;
            }
        });
        $.each(removeModeratorActionLabel, function(k, v) {
            if(Candy.View.Translation[k]) {
                Candy.View.Translation[k].removeModeratorActionLabel = v;
            }
        });
    };

    /** Function: init
     * Initializes the plugin by adding an event which modifies
     * the contextmenu links.
     */
    self.init = function init() {
        applyTranslations();

        $(Candy).bind('candy:view.roster.context-menu', function(e, args) {
            args.menulinks.addModerator = {
                requiredPermission: function(user, me) {
                    if (me.getNick() === user.getNick()) { return false; }

                    var myAffiliation = me.getAffiliation(),
                        theirAffiliation = user.getAffiliation();
                    if (myAffiliation === "owner") {  // && theirAffiliation !== "owner") {
                        return theirAffiliation !== "admin";
                    } else {
                        return false;
                    }
                },
                'class' : 'add-moderator',
                'label' : $.i18n._('addModeratorActionLabel'),
                'callback' : function(e, roomJid, user) {
                    modifyAffiliation('admin', roomJid, user);
                }
            };
            args.menulinks.removeModerator = {
                requiredPermission: function(user, me) {
                    if (me.getNick() === user.getNick()) { return false; }

                    var myAffiliation = me.getAffiliation(),
                        theirAffiliation = user.getAffiliation();
                    if (myAffiliation === "owner") { // && theirAffiliation !== "owner") {
                        var theirRole = user.getRole();
                        return theirAffiliation === "admin" || theirRole === "moderator";
                    } else {
                        return false;
                    }
                },
                'class' : 'remove-moderator',
                'label' : $.i18n._('removeModeratorActionLabel'),
                'callback' : function(e, roomJid, user) {
                    var theirAffiliation = user.getAffiliation();
                    if (theirAffiliation === "admin") {
                        modifyAffiliation("member", roomJid, user);
                    } else {
                        modifyRole('participant', roomJid, user);
                    }
                }
            };
        });
    };

    return self;
}(CandyShop.ModifyRole || {}, Candy, jQuery));