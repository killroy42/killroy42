"use strict";

if (typeof window.LivecodingTV === "undefined") {
    window.LivecodingTV = {};
}

(function (storage, $, LivecodingTV) {
    var cacheGet = function (key) {
            /* Fetches the value from storage (if possible) for a given key.
               Returns undefined if value is not available or key had expired. */
            try {
                var storageKey = "kv:" + key;
                var value = storage.getItem(storageKey);
                var now = Math.round(Date.now() / 1000);
                if (value !== null) {
                    value = JSON.parse(value);
                    if (value && value.length === 2) {
                        if (value[0] >= now) {
                            value = value[1];
                        } else {
                            value = undefined;
                        }
                    } else {
                        value = undefined;
                    }
                    if (typeof value === "undefined") {
                        storage.removeItem(storageKey);
                    }
                } else {
                    value = undefined;
                }
                return value;
            } catch(e) {
                return null;
            }
        },
        cacheSet = function(key, value, ttl) {
            /* Stores (if possible) a value under a given key.
               Pass undefined as a value to remove key from cache. */
            try {
                var storageKey = "kv:" + key;
                if (typeof value === "undefined") {
                    storage.removeItem(storageKey);
                } else {
                    var now = Math.round(Date.now() / 1000);
                    storage.setItem(storageKey, JSON.stringify([now + ttl, value]));
                }
            } catch(e) { /* ignore */ }
        };

    LivecodingTV.kvStorage = {
        url: "/accounts/kv-storage",
        defaultTTL: 600,
        getData: function (keys, callback, ttl) {
            var values = {},
                haveAll = false;
            if (typeof ttl !== "number" || !isFinite(ttl)) {
                ttl = LivecodingTV.kvStorage.defaultTTL;
            }
            if (storage) {
                haveAll = true;
                $.each(keys, function (_idx, key) {
                    var value = cacheGet(key);
                    if (typeof value !== "undefined") {
                        values[key] = value;
                    } else {
                        haveAll = false;
                    }
                });
            }
            if (!haveAll) {
                var data = $.map(keys, function (key) {
                    return {name: "k", value: key};
                });
                $.get(LivecodingTV.kvStorage.url, data, function (response) {
                    if (storage) {
                        $.each(response, function (k, v) {
                            cacheSet(k, v, ttl);
                        });
                    }
                    return callback(response);
                });
            } else {
                callback(values);
            }
        },
        setData: function(data, ttl) {
            if (storage) {
                if (typeof ttl !== "number" || !isFinite(ttl)) {
                    ttl = LivecodingTV.kvStorage.defaultTTL;
                }
                $.each(data, function (k, v) {
                    cacheSet(k, v, ttl);
                });
            }
            return $.post(LivecodingTV.kvStorage.url, data);
        },
        deleteData: function(keys, callback) {
            var data = $.map(keys, function (key) {
                if (storage) { cacheSet(key, null); }
                return {name: "k", value: key};
            });
            $.ajax({
                url: LivecodingTV.kvStorage.url + "?" + $.param(data),
                type: "DELETE",
                success: callback
            });
        }
    };
})(window.sessionStorage, jQuery, window.LivecodingTV);
